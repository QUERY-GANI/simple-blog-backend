# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Author model"""
type Author {
  createdAt: DateTime!
  delete_image: String
  email: String!
  id: Float!
  image: String
  password: String!
  posts: [Post!]!
  role: roles!
  updatedAt: DateTime!
  username: String!
}

"""Like Post Model"""
type BookmarkPost {
  isBookmarked: Boolean!
}

input CreateAuthorInput {
  email: String!
  password: String!
  username: String!
}

input CreatePostInput {
  content: String!
  draft: Boolean
  slug: String
  tags: [Int!]
  title: String!
}

input CreateTagInput {
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteAuthorInput {
  id: Int!
}

input DeletePostInput {
  id: Int!
}

input DeleteTagInput {
  id: Int!
}

input GetAuthorInput {
  id: Int!
}

input GetByTagInput {
  name: String!
}

input GetLikePost {
  id: Int!
}

input GetPostBySlugInput {
  slug: String!
}

input IdPostInput {
  idPost: Int!
}

"""Image class-type"""
type Image {
  delete: String!
  status: Float!
  url: String!
}

"""Like Post Model"""
type LikePost {
  isLiked: Boolean!
}

input LoginInput {
  email: String!
  password: String!
}

type LoginType {
  delete_image: String
  email: String!
  expiresIn: String!
  id: Int!
  image: String
  token: String!
  username: String!
}

type Mutation {
  BookmarkPost(payload: IdPostInput!): BookmarkPost!
  CreateAuthor(payload: CreateAuthorInput!): Author!
  CreatePost(payload: CreatePostInput!): Post!
  CreateTag(payload: CreateTagInput!): Tag!
  DeleteAuthor(payload: DeleteAuthorInput!): ResponseType!
  DeletePost(payload: DeletePostInput!): ResponseType!
  DeleteTag(payload: DeleteTagInput!): ResponseType!
  LikePost(payload: IdPostInput!): Post!
  UpdateAuthor(file: Upload, payload: UpdateAuthorInput!): Author!
  UpdatePost(payload: UpdatePostInput!): Post!
  UpdateTag(payload: UpdateTagInput!): Tag!
  uploadFile(file: Upload!): Image!
}

"""Post model"""
type Post {
  author: Author!
  content: String!
  createdAt: DateTime!
  id: Int!
  likes: Int!
  slug: String!
  tags: [Tag!]!
  title: String!
  updatedAt: DateTime!
}

type Query {
  GetAuthorById(payload: GetAuthorInput!): Author!
  GetPost(payload: GetPostBySlugInput!): Post!
  LikedPost(payload: GetLikePost!): LikePost
  ShowAllAuthor: [Author!]!
  ShowAllPost: [Post!]!
  ShowAllTag: [Tag!]!
  ShowByTag(payload: GetByTagInput!): Tag!
  getMyBookmark: [Post!]!
  login(payload: LoginInput!): LoginType!
}

"""Return Response Type"""
type ResponseType {
  success: Boolean!
}

"""Tag model"""
type Tag {
  id: Int!
  name: String!
  posts: [Post!]!
}

input UpdateAuthorInput {
  id: Int!
  username: String
}

input UpdatePostInput {
  content: String
  draft: Boolean
  id: Int!
  slug: String
  tags: [Int!]
  title: String
}

input UpdateTagInput {
  id: Int!
  name: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

enum roles {
  admin
  member
}